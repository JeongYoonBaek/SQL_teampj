
---------------------------------- 테이블 ------------------------------------
create table kmajor(     --학과
    num number not null primary key,  --학과번호
    name varchar2(50) not null        --학과명
);
create table prop(      --교수
    num number not null primary key,    --교수번호
    name varchar2(50) not null,         --교수명 
    majornum number not null,           --전공번호
    foreign key (majornum) references kmajor(num)
);
create table pupil(     --학생
    num number not null primary key,    --학생번호
    name varchar2(50) not null,         --학생명
    addr varchar2(100) not null,        --주소
    classes number,                     --학년
    ent date,                           --입력 일자
    majornum number not null,           --학과번호
    foreign key (majornum) references kmajor(num)
);
create table mclass(    --과목
    num number not null primary key,    --과목번호
    name varchar2(50) not null,         --과목명
    score number,                       --학점
    mpnum number not null,              --담당교수번호
    foreign key(mpnum) references prop(num)
);
create table classinfo(     --수강 내역
    stunum number not null, --학생번호
    clsnum number not null, --과목번호
    score number(4,1),      --점수
    ranks varchar2(10),     --학점
    constraint classinfo_pk primary key(stunum,clsnum),
    foreign key(stunum) references pupil(num),
    foreign key(clsnum) references mclass(num)
);

------------------------ 프로시져 -----------------------
---------------------------등록 ---------------------------
/ -- 학과등록
CREATE OR REPLACE PROCEDURE inmajor (
    in_num in number,
    in_name varchar2
) IS
BEGIN
    INSERT INTO kmajor VALUES (
        in_num,
        in_name
    );
END inmajor;
/
/   --교수등록
CREATE OR REPLACE PROCEDURE inprop (
    in_num in number,
    in_name varchar2,
    in_majornum number
) IS
BEGIN
    INSERT INTO prop VALUES (
        in_num,
        in_name,
        in_majornum
    );
END inprop;
/
/  --학생등록
create or replace procedure inpupil(
    in_num in number,
    in_name varchar2,
    in_addr varchar2,
    in_classes number,
    in_ent date,
    in_majornum number
)is begin
insert into pupil values(
    in_num,
    in_name,
    in_addr,
    in_classes,
    in_ent,
    in_majornum
);
end inpupil;
/
/ -- 과목등록
create or replace procedure inclass(
    in_num in number,
    in_name varchar2,
    in_score number,
    in_mpnum number
)is begin
insert into mclass values(
    in_num,
    in_name,
    in_score,
    in_mpnum
);
end inclass;
/
/       --수강내역
create or replace procedure inclassinfo(
    in_stunum in number,
    in_clsnum number,
    in_score number,
    in_ranks varchar2
)is begin
insert into classinfo values(
    in_stunum,
    in_clsnum,
    in_score,
    in_ranks
);
end inclassinfo;
/
----------------------------------삭제----------------------------
-- 수강
/
create or replace procedure delclassinfo(
    in_stunum in number
)is begin
delete from classinfo where stunum = in_stunum;
end delclassinfo;
/

/-- 과목
create or replace procedure delclass(
    in_num in number
)is begin
delete from mclass where num = in_num;
end delclass;
/

/-- 학생
create or replace procedure delpupil(
    in_num in number
)is begin
delete from pupil where num = in_num;
end delpupil;
/

/--교수
create or replace procedure delprop(
    in_num in number
)is begin
delete from prop where num = in_num;
end delprop;
/

/--학과
create or replace procedure delmajor(
    in_num in number
)is begin
delete from kmajor where num = in_num;
end delmajor;
/
----------------------------수정 ------------------------------------
/
create or replace procedure up_classinfo( -- 수강내역 점수,학점 변경
    in_stunum in number,
    in_score number,
    in_ranks varchar2
)is begin
update classinfo set
    score = in_score,
    ranks = in_ranks
where stunum = in_stunum;
end up_classinfo;
/
/
create or replace procedure up_class( -- 과목 수강학점 변경
    in_num in number,
    in_score number
)is begin
update mclass set
    score = in_score
where num = in_num;
end up_class;
/
------------------------------- 트리거 ----------------------------

-----------------------등록 ----------------------
CREATE OR REPLACE TRIGGER in_major BEFORE  --학과 등록
    insert ON kmajor
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학과 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_prop BEFORE  --교수 등록
    insert ON prop
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 교수 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_pupil BEFORE  --학생 등록
    insert ON pupil
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학생 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_class BEFORE  --과목 등록
    insert ON mclass
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 과목 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_classinfo BEFORE  --수강 내역 등록
    insert ON classinfo
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 수강내역 등록 완료. ***');
END;
/
-------------------------------------삭제 -------------------------
/
CREATE OR REPLACE TRIGGER in_major BEFORE  --학과 
    delete ON kmajor
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학과 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_prop BEFORE  --교수 
    delete ON prop
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 교수 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_pupil BEFORE  --학생 
    delete ON pupil
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학생 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_class BEFORE  --과목 
    delete ON mclass
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 과목 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_classinfo BEFORE  --수강 내역 
    delete ON classinfo
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 수강내역 삭제 완료. ***');
END;
/ 
-------------------------------수정----------------------
/
CREATE OR REPLACE TRIGGER in_major BEFORE  --학과 
    update ON kmajor
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학과 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_prop BEFORE  --교수 
    update ON prop
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 교수 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_pupil BEFORE  --학생 
    update ON pupil
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학생 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_class BEFORE  --과목 
    update ON mclass
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 과목 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_classinfo BEFORE  --수강 내역 
    update ON classinfo
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 수강내역 수정 완료. ***');
END;
/ 

--------------------------------- TEST --------------------
drop table kmajor;
drop table prop;
drop table pupil;
drop table classinfo;
drop table mclass;

drop sequence sq;
create sequence sq;
exec inmajor(sq.nextval, 'Java');
exec inmajor(sq.nextval, 'C');
exec inmajor(sq.nextval, 'C++');
exec inmajor(sq.nextval, 'python');
exec inmajor(sq.nextval, 'sql');
exec inmajor(sq.nextval, 'script');
select * from kmajor;

exec inprop(sq.nextval, 'Lee', 1);
exec inprop(sq.nextval, 'kim', 1);
exec inprop(sq.nextval, 'im', 2);
exec inprop(sq.nextval, 'jung', 2);
exec inprop(sq.nextval, 'Lee', 3);
exec inprop(sq.nextval, 'Lee', 4);
exec inprop(sq.nextval, 'Lee', 5);
exec inprop(sq.nextval, 'Lee', 6);
select * from prop;

exec inpupil(sq.nextval, 'kim', 'asdf asdfas',1,'2023-10-20',2);
exec inpupil(sq.nextval, 'im', 'asdf asdfas',2,'2023-10-20',1);
exec inpupil(sq.nextval, 'moon', 'asdf asdfas',3,'2023-10-20',3);
select * from pupil;

exec inclass(sq.nextval, 'SQL활용',3,5);
exec inclass(sq.nextval, 'java활용',3,1);
exec inclass(sq.nextval, 'C활용',2,2);
select * from mclass;

exec inclassinfo(1,2,80,'B');

select * from classinfo;
