---------------------------------- 테이블 ------------------------------------
CREATE TABLE kmajor (     --학과
    num  NUMBER NOT NULL PRIMARY KEY,  --학과번호
    name VARCHAR2(50) NOT NULL        --학과명
);

CREATE TABLE prop (      --교수
    num      NUMBER NOT NULL PRIMARY KEY,    --교수번호
    name     VARCHAR2(50) NOT NULL,         --교수명 
    majornum NUMBER NOT NULL,           --전공번호
    FOREIGN KEY ( majornum )
        REFERENCES kmajor ( num )
);

CREATE TABLE pupil (     --학생
    num      NUMBER NOT NULL PRIMARY KEY,    --학생번호
    name     VARCHAR2(50) NOT NULL,         --학생명
    addr     VARCHAR2(100) NOT NULL,        --주소
    classes  NUMBER,                     --학년
    ent      DATE,                           --입력 일자
    majornum NUMBER NOT NULL,           --학과번호
    FOREIGN KEY ( majornum )
        REFERENCES kmajor ( num )
);

CREATE TABLE mclass (    --과목
    num   NUMBER NOT NULL PRIMARY KEY,    --과목번호
    name  VARCHAR2(50) NOT NULL,         --과목명
    score NUMBER,                       --학점
    mpnum NUMBER NOT NULL,              --담당교수번호
    FOREIGN KEY ( mpnum )
        REFERENCES prop ( num )
);

CREATE TABLE classinfo (     --수강 내역
    stunum NUMBER NOT NULL, --학생번호
    clsnum NUMBER NOT NULL, --과목번호
    score  NUMBER(4, 1),      --점수
    ranks  VARCHAR2(10),     --학점
    CONSTRAINT classinfo_pk PRIMARY KEY ( stunum,
                                          clsnum ),
    FOREIGN KEY ( stunum )
        REFERENCES pupil ( num ),
    FOREIGN KEY ( clsnum )
        REFERENCES mclass ( num )
);

------------------------ 프로시져 -----------------------
---------------------------등록 ---------------------------

/ -- 학과등록
CREATE OR REPLACE PROCEDURE inmajor (
    in_num  IN NUMBER,
    in_name VARCHAR2
) IS
BEGIN
    INSERT INTO kmajor VALUES (
        in_num,
        in_name
    );

END inmajor;
/
/   --교수등록
CREATE OR REPLACE PROCEDURE inprop (
    in_num in number,
    in_name varchar2,
    in_majornum number
) IS
BEGIN
    INSERT INTO prop VALUES (
        in_num,
        in_name,
        in_majornum
    );
END inprop;
/
/  --학생등록
create or replace procedure inpupil(
    in_num in number,
    in_name varchar2,
    in_addr varchar2,
    in_classes number,
    in_ent date,
    in_majornum number
)is begin
insert into pupil values(
    in_num,
    in_name,
    in_addr,
    in_classes,
    in_ent,
    in_majornum
);
end inpupil;
/
/ -- 과목등록
create or replace procedure inclass(
    in_num in number,
    in_name varchar2,
    in_score number,
    in_mpnum number
)is begin
insert into mclass values(
    in_num,
    in_name,
    in_score,
    in_mpnum
);
end inclass;
/
/       --수강내역
create or replace procedure inclassinfo(
    in_stunum in number,
    in_clsnum number,
    in_score number,
    in_ranks varchar2
)is begin
insert into classinfo values(
    in_stunum,
    in_clsnum,
    in_score,
    in_ranks
);
end inclassinfo;
/
----------------------------------삭제----------------------------
-- 수강
/
create or replace procedure delclassinfo(
    in_stunum in number
)is begin
delete from classinfo where stunum = in_stunum;
end delclassinfo;
/

/-- 과목
create or replace procedure delclass(
    in_num in number
)is begin
delete from mclass where num = in_num;
end delclass;
/

/-- 학생
create or replace procedure delpupil(
    in_num in number
)is begin
delete from pupil where num = in_num;
end delpupil;
/

/--교수
create or replace procedure delprop(
    in_num in number
)is begin
delete from prop where num = in_num;
end delprop;
/

/--학과
create or replace procedure delmajor(
    in_num in number
)is begin
delete from kmajor where num = in_num;
end delmajor;
/
----------------------------수정 ------------------------------------
/
create or replace procedure upclassinfo( -- 수강내역 점수,학점 변경
    in_stunum in number,
    in_score number,
    in_ranks varchar2
)is begin
update classinfo set
    score = in_score,
    ranks = in_ranks
where stunum = in_stunum;
end upclassinfo;
/
/
create or replace procedure upclass( -- 과목 수강학점 변경
    in_num in number,
    in_score number
)is begin
update mclass set
    score = in_score
where num = in_num;
end upclass;
/
/
create or replace procedure uppupil( --학생 정보 수정
    in_num in number,
    in_addr varchar2,
    in_classes number,
    in_ent date,
    in_majornum number
)is begin 
update pupil set 
    addr = in_addr,
    classes = in_classes,
    ent = in_ent,
    majornum = in_majornum 
where num=in_num;
end uppupil;
/
/
create or replace procedure upprop(
    in_num in number,
    in_majornum number
)is begin
update prop set
    majornum = in_majornum
where num = in_num;
end upprop;
/
------------------------------- 트리거 ----------------------------

-----------------------등록 ----------------------
CREATE OR REPLACE TRIGGER in_major BEFORE  --학과 등록
    insert ON kmajor
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학과 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_prop BEFORE  --교수 등록
    insert ON prop
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 교수 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_pupil BEFORE  --학생 등록
    insert ON pupil
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학생 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_class BEFORE  --과목 등록
    insert ON mclass
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 과목 등록 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_classinfo BEFORE  --수강 내역 등록
    insert ON classinfo
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 수강내역 등록 완료. ***');
END;
/
-------------------------------------삭제 -------------------------
/
CREATE OR REPLACE TRIGGER in_major BEFORE  --학과 
    delete ON kmajor
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학과 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_prop BEFORE  --교수 
    delete ON prop
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 교수 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_pupil BEFORE  --학생 
    delete ON pupil
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학생 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_class BEFORE  --과목 
    delete ON mclass
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 과목 삭제 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_classinfo BEFORE  --수강 내역 
    delete ON classinfo
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 수강내역 삭제 완료. ***');
END;
/ 
-------------------------------수정----------------------
/
CREATE OR REPLACE TRIGGER in_major BEFORE  --학과 
    update ON kmajor
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학과 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_prop BEFORE  --교수 
    update ON prop
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 교수 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_pupil BEFORE  --학생 
    update ON pupil
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 학생 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_class BEFORE  --과목 
    update ON mclass
    FOR EACH ROW
DECLARE BEGIN
    dbms_output.put_line('*** 과목 수정 완료. ***');
END;
/
/
CREATE OR REPLACE TRIGGER in_classinfo BEFORE  --수강 내역 
    update ON classinfo
    FOR EACH ROW
DECLARE BEGIN
dbms_output.put_line('*** 수강내역 수정 완료. ***');

end;
/ 

--------------------------------- TEST zone --------------------
